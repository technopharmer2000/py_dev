# -*- coding: utf-8 -*-
"""COVID-19_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LJKl7G18UBv0keB-FGTBgnvd_1qM11tI

# COVID Analysis
Import data from github and load into dataframe
"""

import pandas as pd
from matplotlib import pyplot as plt

url = 'https://raw.githubusercontent.com/technopharmer2000/py_dev/master/py_dev/matplotlib/COVID-19/COVIDSummaryData.csv'
df = pd.read_csv(url)

"""Verfiy data has loaded properly.

Create dictionary of ages:case_count and ages:death_count.
"""

print (df.head())

case_count = {'0-19':len(df.loc[df['Age Range'] == '0-19']), 
              '20-29':len(df.loc[df['Age Range'] == '20-29']), 
              '30-39':len(df.loc[df['Age Range'] == '30-39']), 
              '40-49':len(df.loc[df['Age Range'] == '40-49']),
              '50-59':len(df.loc[df['Age Range'] == '50-59']), 
              '60-69':len(df.loc[df['Age Range'] == '60-69']), 
              '70-79':len(df.loc[df['Age Range'] == '70-79']), 
              '80+':len(df.loc[df['Age Range'] == '80+']), 
              'Unknown':len(df.loc[df['Age Range'] == 'Unknown'])
              }

death_count = {'0-19':len(df.loc[(df['Age Range'] == '0-19') & (df['Death Count'] == 1)]), 
              '20-29':len(df.loc[(df['Age Range'] == '20-29') & (df['Death Count'] == 1)]), 
              '30-39':len(df.loc[(df['Age Range'] == '30-39') & (df['Death Count'] == 1)]), 
              '40-49':len(df.loc[(df['Age Range'] == '40-49') & (df['Death Count'] == 1)]),
              '50-59':len(df.loc[(df['Age Range'] == '50-59') & (df['Death Count'] == 1)]), 
              '60-69':len(df.loc[(df['Age Range'] == '60-69') & (df['Death Count'] == 1)]), 
              '70-79':len(df.loc[(df['Age Range'] == '70-79') & (df['Death Count'] == 1)]), 
              '80+':len(df.loc[(df['Age Range'] == '80+') & (df['Death Count'] == 1)]), 
              'Unknown':len(df.loc[(df['Age Range'] == 'Unknown') & (df['Death Count'] == 1)])
              }

print (case_count)
print (death_count)

ages=list(death_count.keys())
cases=list(case_count.values())
deaths=list(death_count.values())

"""Plot cases vs deaths by age."""

plt.style.use("ggplot")

fig, axes = plt.subplots(ncols=2, sharey=True)
axes[0].barh(ages, deaths, align='center', zorder=50)
axes[0].set(title='Deaths')
axes[1].barh(ages, cases, align='center', zorder=50)
axes[1].set(title='Cases')

axes[0].invert_xaxis()
axes[0].set(yticks=ages, yticklabels=[])
for age in ages:
    axes[0].annotate(age, (0.5, age), xycoords=('figure fraction', 'data'), ha='center')
plt.savefig('Deaths & Cases by Age')
plt.show